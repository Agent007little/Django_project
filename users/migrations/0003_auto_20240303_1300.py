# Generated by Django 5.0.1 on 2024-03-03 10:00

from django.db import migrations


def create_users(apps, schema_editor):
    User = apps.get_model("auth", "User")

    users_data = [
        {"username": "John", "first_name": "John", "last_name": "Doe", "email": "john.doe@mail.com",
         "password": "John12345_"},
        {"username": "Emily", "first_name": "Emily", "last_name": "Smith", "email": "emily.smith@mail.com",
         "password": "Emily12345_"},
        {"username": "Michael", "first_name": "Michael", "last_name": "Johnson", "email": "michael.johnson@mail.com",
         "password": "Michael12345_"},
        {"username": "Sarah", "first_name": "Sarah", "last_name": "Brown", "email": "sarah.brown@mail.com",
         "password": "Sarah12345_"},
        {"username": "David", "first_name": "David", "last_name": "Wilson", "email": "david.wilson@mail.com",
         "password": "David12345_"},
        {"username": "Emma", "first_name": "Emma", "last_name": "Davis", "email": "emma.davis@mail.com",
         "password": "Emma12345_"},
        {"username": "James", "first_name": "James", "last_name": "Martinez", "email": "james.martinez@mail.com",
         "password": "James12345_"},
        {"username": "Olivia", "first_name": "Olivia", "last_name": "Garcia", "email": "olivia.garcia@mail.com",
         "password": "Olivia12345_"},
        {"username": "Daniel", "first_name": "Daniel", "last_name": "Rodriguez", "email": "daniel.rodriguez@mail.com",
         "password": "Daniel12345_"},
    ]

    for user_data in users_data:
        User.objects.create(**user_data)


def create_user_subscription(apps, schema_editor):
    UserSubscription = apps.get_model("users", "UserSubscription")
    User = apps.get_model("auth", "User")

    users = User.objects.all()

    # Создаем связи между пользователями
    for user in users:
        # Пример: создаем подписку пользователя John на пользователя Emily
        if user.username == "John":
            subscription_user1 = User.objects.get(username="Emily")
            subscription_user2 = User.objects.get(username="Sarah")
            subscription_user3 = User.objects.get(username="Alex")
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user1)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user2)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user3)

        # Продолжаем добавлять связи между другими пользователями по аналогии
        elif user.username == "Emily":
            subscription_user1 = User.objects.get(username="John")
            subscription_user2 = User.objects.get(username="Sarah")
            subscription_user3 = User.objects.get(username="Alex")
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user1)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user2)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user3)

        elif user.username == "Sarah":
            subscription_user1 = User.objects.get(username="John")
            subscription_user2 = User.objects.get(username="Emily")
            subscription_user3 = User.objects.get(username="Alex")
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user1)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user2)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user3)

        elif user.username == "Alex":
            subscription_user1 = User.objects.get(username="John")
            subscription_user2 = User.objects.get(username="Emily")
            subscription_user3 = User.objects.get(username="Sarah")
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user1)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user2)
            UserSubscription.objects.create(user_id=user, subscription_id=subscription_user3)


class Migration(migrations.Migration):
    dependencies = [
        ('users', '0002_auto_20240303_1106'),
    ]

    operations = [
        migrations.RunPython(create_users),
        migrations.RunPython(create_user_subscription)
    ]
